#!/bin/bash
set -eu -o pipefail

TMP=$(mktemp)
docker inspect "$1" > "$TMP"
shift

cat <<EOF
{
  "version": "0.1",
  "os": "linux",
  "arch": "amd64",
  "processes": [
    {
      "tty":  $(jq '.[0].Config.Tty' < "$TMP"),
      "user": $(jq '.[0].Config.User' < "$TMP"),
      "args": $(jq '.[0].Config.Entrypoint + .[0].Config.Cmd' < "$TMP"),
      "env":  $(jq '.[0].Config.Env' < "$TMP"),
      "cwd":  $(jq '.[0].Config.WorkingDir' < "$TMP")
    }
  ],
  "root": {
    "path": "rootfs",
    "readonly": false
  },
  "namespaces": [
    {
      "type": "process"
    },
    {
      "type": "mount"
    },
    {
      "type": "ipc"
    },
    {
      "type": "uts"
    }
  ],
  "capabilities": [
    "CHOWN",
    "DAC_OVERRIDE",
    "FSETID",
    "FOWNER",
    "MKNOD",
    "NET_RAW",
    "SETGID",
    "SETUID",
    "SETFCAP",
    "SETPCAP",
    "NET_BIND_SERVICE",
    "SYS_CHROOT",
    "KILL",
    "AUDIT_WRITE"
  ],
  "devices": [
    "null",
    "random",
    "full",
    "tty",
    "zero",
    "urandom"
  ],
  "mounts": [
    {
      "type": "proc",
      "source": "proc",
      "destination": "/proc",
      "options": ""
    },
    {
      "type": "tmpfs",
      "source": "tmpfs",
      "destination": "/dev",
      "options": "nosuid,strictatime,mode=755,size=65536k"
    },
    {
      "type": "devpts",
      "source": "devpts",
      "destination": "/dev/pts",
      "options": "nosuid,noexec,newinstance,ptmxmode=0666,mode=0620,gid=5"
    },
    {
      "type": "tmpfs",
      "source": "shm",
      "destination": "/dev/shm",
      "options": "nosuid,noexec,nodev,mode=1777,size=65536k"
    },
    {
      "type": "mqueue",
      "source": "mqueue",
      "destination": "/dev/mqueue",
      "options": "nosuid,noexec,nodev"
    },
    {
      "type": "sysfs",
      "source": "sysfs",
      "destination": "/sys",
      "options": "nosuid,noexec,nodev"
    }
EOF
  for m in "$@"; do
    [ -z "$m" ] && continue
    source=$(echo "$m"|cut -d: -f1)
    destination=$(echo "$m"|cut -d: -f2)
    [ -z "$destination" ] && destination="$source"
    echo ",{ \"type\": \"bind\", \"source\": \"$source\", \"destination\": \"$destination\", \"options\": \"bind\" }"
  done
cat <<EOF
  ]
}
EOF

rm "$TMP"
